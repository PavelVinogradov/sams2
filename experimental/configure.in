#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_INIT([src/defines.h])
AM_INIT_AUTOMAKE(samsnegen, 1.0)

# Checks for programs.
AC_PROG_CXX
AC_PROG_LN_S

# Checks for libraries.

# Checks for header files.
#AC_CHECK_HEADERS([strings.h iostream.h string vector stdio.h mysql.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL

dnl define various options
AC_ARG_WITH(configfile, [  --with-configfile=PATH  default runtime config file (/etc/sams.conf)])
if test "X$with_configfile" != "Xno" && test "X$with_configfile" != "Xyes" && test "X$with_configfile" != "X"; then
        CONFIG_FILE=$with_configfile
fi
: ${CONFIG_FILE="/etc/sams.conf"}
sysconfdir=$CONFIG_FILE;
echo "#define CONFIG_FILE \"$CONFIG_FILE\"" >config.h
AC_SUBST(CONFIG_FILE)dnl
AC_DEFINE_UNQUOTED(CONFIG_FILE,"$CONFIG_FILE")dnl
####

AC_MSG_CHECKING(for the SAMS startup scripts locations)
AC_ARG_WITH(rcd-locations,
[  --with-rcd-locations=PATH   specify path for the startup rc.d script locations],
    use_rcd_locations="$withval", use_rcd_locations="unspec")
case "$use_rcd_locations" in
    unspec)
        DST_RCD_LOC='/etc/init.d'
        for ac_dir in /etc/init.d /usr/local/etc/rc.d; do
            if test -f "$ac_dir"; then
                DST_RCD_LOC=$ac_dir
                break;
            fi
        done
        AC_MSG_RESULT($DST_RCD_LOC)
        ;;
    yes)
        AC_MSG_ERROR([--with-rcd-locations must specify a path])
        ;;
    *)
        DST_RCD_LOC="$use_rcd_locations"
        AC_MSG_RESULT($DST_RCD_LOC)
        ;;
esac
RCDPATH="$DST_RCD_LOC"


AC_ARG_WITH(unixODBC,
            [  --with-unixODBC[=DIR]     Use unixODBC located in DIR],
            [ unixODBC="$withval" ], [ unixODBC="" ])

AC_DEFINE([USE_UNIXODBC], [1], [use unixODBC])

# Default to /usr if not specified
if test "x$unixODBC" = "x" -o "x$unixODBC" = "xyes"
then
  unixODBC="/usr";
fi

AC_MSG_CHECKING([for unixODBC version])
AC_PATH_PROG(isql, isql, no, ["$unixODBC/bin:$PATH"])
if test "$isql" != "no"
then
  unixodbc_version=`$isql --version`
else
  unixodbc_version="unknown"
fi
AC_MSG_RESULT([$unixodbc_version])

AC_ARG_WITH(unixODBC-includes,
            [  --with-unixODBC-includes=DIR Find unixODBC headers in DIR],
            unixODBC_includes="$withval",
            unixODBC_includes="$unixODBC/include")

AC_ARG_WITH(unixODBC-libs,
            [  --with-unixODBC-libs=DIR Find unixODBC libraries in DIR],
            unixODBC_libs="$withval", unixODBC_libs="$unixODBC/lib")

AC_CHECK_UNIXODBC($unixODBC_includes, $unixODBC_libs)

AC_ARG_WITH(odbc-ini,
            [  --with-odbc-ini=PATH    Location of system ODBC.INI [UnixODBCDIR/etc/odbc.ini]],
            odbc_ini="$withval", odbc_ini="$unixODBC/etc/odbc.ini")

if test "x$have_odbcinst" != "xyes"
then
  AC_DEFINE_UNQUOTED(SYSTEM_ODBC_INI,"$odbc_ini",
                     [Define path to system ODBC.INI file])
fi

ODBCHEADERS="-I$unixODBC_includes"
ODBCLIBS="-L$unixODBC_libs -lodbc"


#AC_SUBST(SUBDIRS)
AC_SUBST(RCDPATH)
AC_SUBST(HTTPDPATH)
AC_SUBST(ODBCHEADERS)
AC_SUBST(ODBCLIBS)


AC_MSG_RESULT([])
AC_MSG_RESULT([***** Options and locations *****])
AC_MSG_RESULT([system:                                 $OS])
AC_MSG_RESULT([default path:                           $prefix])
AC_MSG_RESULT([default runtime config file:            $CONFIG_FILE])
AC_MSG_RESULT([unixODBC includes:                      $unixODBC_includes])
AC_MSG_RESULT([unixODBC libraries:                     $unixODBC_libs])
AC_MSG_RESULT([])
AC_MSG_RESULT([Type 'make'])
AC_MSG_RESULT([])


# Checks for library functions.

AC_CONFIG_FILES([Makefile src/Makefile])
AC_OUTPUT
