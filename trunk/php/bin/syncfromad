<?php
/*  
 * SAMS (Squid Account Management System)
 * Author: Dmitry Chemerik chemerik@mail.ru
 * (see the file 'main.php' for license details)
 */

error_reporting(0);

/*
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫ MoveUserToDBGroup($username, $groupname)
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ $username О©╫ О©╫О©╫О©╫О©╫О©╫О©╫ $groupname
 */
function MoveUserToDBGroup($username, $groupname)
{
  global $SAMSConf;
  global $DEBUG;
  $DB=new SAMSDB();
  $dbusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

  $QUERY="SELECT sgroup.s_group_id,sgroup.s_name FROM sgroup WHERE s_name='$groupname'";
  $result=$DB->samsdb_query_value($QUERY);
  $row=$DB->samsdb_fetch_array();
  $groupid=$row['s_group_id'];

  $QUERY="SELECT shablon.s_shablon_id FROM shablon WHERE s_name='$groupname'";
  $result=$DB->samsdb_query_value($QUERY);
  $row=$DB->samsdb_fetch_array();
  $shablonid=$row['s_shablon_id'];

  $QUERY="UPDATE squiduser SET s_group_id='$groupid',s_shablon_id='$shablonid' WHERE s_nick='$username' ";
  $result=$DB->samsdb_query_value($QUERY);
  if($DEBUG!=0)
    echo "Move user $username to SAMS group $groupname groupid=".$row['s_group_id']."\n";

  return(NULL);
}

/*
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫ ReturnUsersFromDBGroup($groupname)
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫ $groupname
 */

function ReturnUsersFromDBGroup($groupname)
{
  global $SAMSConf;
  $DB=new SAMSDB();

  $dbusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

  $count=0;
  $result=$DB->samsdb_query_value("SELECT squiduser.s_nick, sgroup.s_group_id, sgroup.s_name FROM squiduser LEFT JOIN sgroup ON squiduser.s_group_id=sgroup.s_group_id WHERE sgroup.s_name = '$groupname'");
  while($row=$DB->samsdb_fetch_array())
  {
    $dbusers[$count++]=$row['s_nick'];
  }

  return($dbusers);
}
/*
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫ SearchUserFromDBGroup($username)
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫ SAMS, О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫ О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ AD, 
 * О©╫ О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ $username. 
 * О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫, О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ NULL
 */
function SearchUserFromDBGroup($username)
{
  global $SAMSConf;
  $DB=new SAMSDB();

  $dbusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

    $count=0;

    $QUERY="SELECT sgroup.s_name as groupname FROM auth_param LEFT JOIN sgroup ON auth_param.s_value=sgroup.s_name LEFT JOIN squiduser ON sgroup.s_group_id=squiduser.s_group_id WHERE s_auth='adld' AND s_param='adldgroup' AND squiduser.s_name='$username'";
    $result=$DB->samsdb_query_value($QUERY);
    if($result>0)
    {
	$row=$DB->samsdb_fetch_array();
	return($row['groupname']);
    }
  return(NULL);
}
/*
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫ AddUserToDBGroup($username, $groupname)
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ $username О©╫ О©╫О©╫О©╫О©╫О©╫О©╫ $groupname
 */
function AddUserToDBGroup($username, $groupname)
{
  require_once("src/adldap.php");
  global $SAMSConf;
  $DB=new SAMSDB();

  $dbusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

  $QUERY="SELECT sgroup.s_group_id FROM sgroup WHERE s_name='$groupname'";
  $result=$DB->samsdb_query_value($QUERY);
  $row=$DB->samsdb_fetch_array();
  $groupid=$row['s_group_id'];

  $QUERY="SELECT shablon.s_shablon_id,shablon.s_quote FROM shablon WHERE s_name='$groupname'";
  $result=$DB->samsdb_query_value($QUERY);
  $row=$DB->samsdb_fetch_array();
  $shablonid=$row['s_shablon_id'];
  $userquote=$row['s_quote'];
  if ( $userquote == "" )
  {
    $userquote=0;
  }
  if ( $enabled == "" )
  {
    $enabled=1;
  }


    $adldserver=GetAuthParameter("adld","adldserver");
    $basedn=GetAuthParameter("adld","basedn");
    $adadmin=GetAuthParameter("adld","adadmin");
    $adadminpasswd=GetAuthParameter("adld","adadminpasswd");
    $usergroup=GetAuthParameter("adld","usergroup");

    $LDAPBASEDN2=strtok($basedn,".");
    $LDAPBASEDN="DC=$LDAPBASEDN2";
    while(strlen($LDAPBASEDN2)>0)
    {
	$LDAPBASEDN2=strtok(".");
	if(strlen($LDAPBASEDN2)>0)
	    $LDAPBASEDN="$LDAPBASEDN,DC=$LDAPBASEDN2";
    }

    $pdc=array("$adldserver");
    $options=array(account_suffix=>"@$basedn", base_dn=>"$LDAPBASEDN",domain_controllers=>$pdc, 
    ad_username=>"$adadmin",ad_password=>"$adadminpasswd","","","");

    $ldap=new adLDAP($options);

    $userinfo=$ldap->user_info( $username, $fields=NULL);
    $username2 = UTF8ToSAMSLang($user);
    $displayname = UTF8ToSAMSLang($userinfo[0]["displayname"][0]);
    $name=explode(" ",$displayname);
    $cname=count($name);
    if($DEBUG!=0)
	echo " $user $username $name[0] ".$name[$cname-1]." $cname\n";
    $QUERY="INSERT INTO squiduser ( s_nick, s_domain, s_name, s_family, s_shablon_id, s_quote,  s_size, s_enabled, s_group_id, s_soname, s_ip, s_passwd, s_hit, s_autherrorc, s_autherrort ) VALUES ( '$username', '$userdomain', '$name[0]', '".$name[$cname-1]."', '$shablonid', '$userquote',  '0', '$enabled', '$groupid', '$usersoname', '$userip', '$pass', '0', '0', '0') ";
    $DB->samsdb_query($QUERY);

  return(NULL);
}
/*
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫ DeleteUserToDBGroup($username, $groupname)
 * О©╫О©╫О©╫О©╫О©╫О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫О©╫ $username О©╫О©╫ О©╫О©╫О©╫О©╫О©╫О©╫ $groupname
 */
function DeleteUserToDBGroup($username, $groupname)
{
  global $SAMSConf;
  $DB=new SAMSDB();

  $dbusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

  $QUERY="SELECT sgroup.s_group_id FROM sgroup WHERE s_name='$groupname'";
  $result=$DB->samsdb_query_value($QUERY);
  $row=$DB->samsdb_fetch_array();
  $groupid=$row['s_group_id'];

  $QUERY="DELETE FROM squiduser WHERE s_nick='$username' AND s_group_id='$groupid' ";
  $result=$DB->samsdb_query($QUERY);

  return(NULL);
}


/*
 * Функция ReturnUsersFromSAMSTemplate($templatename)
 * возвращает массив пользователей шаблона $templatename
 */

function ReturnUsersFromSAMSTemplate($templatename)
{
  global $SAMSConf;
  $DB=new SAMSDB();

  $samsusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

  $count=0;
  $result=$DB->samsdb_query_value("SELECT squiduser.s_nick, shablon.s_shablon_id, shablon.s_name FROM squiduser LEFT JOIN shablon ON squiduser.s_shablon_id=shablon.s_shablon_id WHERE shablon.s_name = '$templatename'");
  while($row=$DB->samsdb_fetch_array())
  {
	$samsusers[$count++]=$row['s_nick'];
  }

  return($samsusers);
}


/*
 * Функция ReturnUsersFromADGroup($groupname)
 * возвращает массив пользователей ActiveDirectory группы $groupname
 */
function ReturnUsersFromADGroup($groupname)
{
  global $SAMSConf;
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

  $adusers = array();
  $count=0;
	require_once("src/adldap.php");

	$DB=new SAMSDB();

  	$adldserver=GetAuthParameter("adld","adldserver");
	$basedn=GetAuthParameter("adld","basedn");
	$adadmin=GetAuthParameter("adld","adadmin");
	$adadminpasswd=GetAuthParameter("adld","adadminpasswd");
	$usergroup=GetAuthParameter("adld","usergroup");

	$LDAPBASEDN2=strtok($basedn,".");
	$LDAPBASEDN="DC=$LDAPBASEDN2";
	while(strlen($LDAPBASEDN2)>0)
	{
		$LDAPBASEDN2=strtok(".");
		if(strlen($LDAPBASEDN2)>0)
			$LDAPBASEDN="$LDAPBASEDN,DC=$LDAPBASEDN2";
	}

 	$pdc=array("$adldserver");
	$options=array(account_suffix=>"@$basedn", base_dn=>"$LDAPBASEDN",domain_controllers=>$pdc, 
	ad_username=>"$adadmin",ad_password=>"$adadminpasswd","","","");
	$ldap=new adLDAP($options);


	$adusers=$ldap->group_members($groupname);
	$acount=count($adusers);
	return($adusers);
}


/*
 * Функция SearchUserFromADGroups($username)
 * возвращает название группы AD
 * в которой найден пользователь $username. 
 * если пользователь не найден, возвращается NULL
 */
function SearchUserFromADGroups($username)
{
  global $SAMSConf;
  global $DEBUG;
  $DB=new SAMSDB();

  $samsusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

	$count=0;

	$QUERY="SELECT s_value FROM auth_param WHERE s_auth='adld' AND s_param='adldgroup'";
	$result=$DB->samsdb_query_value($QUERY);

	while($row=$DB->samsdb_fetch_array())
	{
		$adgusers=ReturnUsersFromADGroup($row['s_value']);
		$adguserscount=count($adgusers);
		for($i=0; $i<$adguserscount; $i++)
		{
			if($adgusers[$i]==$username)
			{
				return($row['s_value']);
			}
		}
	}
  return(NULL);
}


/*
 * Функция SearchUserFromSAMSTemplate($username)
 * возвращает название группы SAMS, синхронизируемой с группами AD, 
 * в которой найден пользователь $username. 
 * если пользователь не найден, возвращается NULL
 */
function SearchUserFromSAMSTemplate($username)
{
  global $SAMSConf;
  $DB=new SAMSDB();

  $samsusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

	$count=0;
	$QUERY="SELECT auth_param.s_value, shablon.s_name as shablonname, squiduser.s_nick FROM auth_param LEFT JOIN shablon ON auth_param.s_value=shablon.s_name  LEFT JOIN squiduser ON shablon.s_shablon_id=squiduser.s_shablon_id WHERE shablon.s_auth='adld' AND auth_param.s_param='adldgroup' AND squiduser.s_nick='$username'";
	$result=$DB->samsdb_query_value($QUERY);
	if($result>0)
	{
		$row=$DB->samsdb_fetch_array();
		return($row['shablonname']);
	}
  return(NULL);
}

/*
 * Функция MoveUserToSAMSTemplate($username, $groupname)
 * перемещает пользователя $username в группу $groupname
 */
function MoveUserToSAMSTemplate($username, $groupname)
{
  global $SAMSConf;
  global $DEBUG;
  $DB=new SAMSDB();
  $samsusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

  $QUERY="SELECT shablon.s_shablon_id FROM shablon WHERE s_name='$groupname'";
  $result=$DB->samsdb_query_value($QUERY);
  $row=$DB->samsdb_fetch_array();
  $shablonid=$row['s_shablon_id'];

  $QUERY="UPDATE squiduser SET s_shablon_id='$shablonid' WHERE s_nick='$username' ";
  $result=$DB->samsdb_query($QUERY);
  if($DEBUG!=0)
	echo "Move user $username to SAMS template $groupname templateid=".$row['s_shablon_id']."\n";

  return(NULL);
}

/*
 * Функция AddUserToSAMSTemplate($username, $groupname)
 * добавляет нового пользователя $username в группу $groupname
 */
function AddUserToSAMSTemplate($username, $groupname)
{
  require_once("src/adldap.php");
  global $SAMSConf;
  global $DEBUG;
  $DB=new SAMSDB();

  $samsusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

  $QUERY="SELECT sgroup.s_group_id FROM sgroup WHERE s_name='$groupname'";
  $result=$DB->samsdb_query_value($QUERY);
  $row=$DB->samsdb_fetch_array();
  $groupid=$row['s_group_id'];

  $QUERY="SELECT shablon.s_shablon_id,shablon.s_quote FROM shablon WHERE s_name='$groupname'";
  $result=$DB->samsdb_query_value($QUERY);
  $row=$DB->samsdb_fetch_array();
  $shablonid=$row['s_shablon_id'];
  $userquote=$row['s_quote'];
  if ( $userquote == "" )
  {
	$userquote=0;
  }
  $enabled=0;
  if ( $enabled == "" )
  {
	$enabled=1;
  }


	$adldserver=GetAuthParameter("adld","adldserver");
	$basedn=GetAuthParameter("adld","basedn");
	$adadmin=GetAuthParameter("adld","adadmin");
	$adadminpasswd=GetAuthParameter("adld","adadminpasswd");
	$usergroup=GetAuthParameter("adld","usergroup");

	$LDAPBASEDN2=strtok($basedn,".");
	$LDAPBASEDN="DC=$LDAPBASEDN2";
	while(strlen($LDAPBASEDN2)>0)
	{
		$LDAPBASEDN2=strtok(".");
		if(strlen($LDAPBASEDN2)>0)
			$LDAPBASEDN="$LDAPBASEDN,DC=$LDAPBASEDN2";
	}

 	$pdc=array("$adldserver");
	$options=array(account_suffix=>"@$basedn", base_dn=>"$LDAPBASEDN",domain_controllers=>$pdc, 
	ad_username=>"$adadmin",ad_password=>"$adadminpasswd","","","");

	$ldap=new adLDAP($options);

	$userinfo=$ldap->user_info( $username, $fields=NULL);
	$displayname = $userinfo[0]["displayname"][0];
	$name=explode(" ",$displayname);
	$cname=count($name);
	$usersoname="";
	$userip="";
	$pass="";
	if($DEBUG!=0)
		echo " $username $name[0] ".$name[$cname-1]." $cname\n";
	$QUERY="INSERT INTO squiduser ( s_nick, s_domain, s_name, s_family, s_shablon_id, s_quote,  s_size, s_enabled, s_group_id, s_soname, s_ip, s_passwd, s_hit, s_autherrorc, s_autherrort ) VALUES ( '$username', '$basedn', '$name[0]', '".$name[$cname-1]."', '$shablonid', '$userquote',  '0', '$enabled', '$groupid', '$usersoname', '$userip', '$pass', '0', '0', '0') ";
	$DB->samsdb_query($QUERY);

  return(NULL);
}

/*
 * Функция DeleteUserToSAMSTemplate($username, $groupname)
 * удаляет пользователя $username из шаблона $templatename
 */
function DeleteUserToSAMSTemplate($username, $templatename)
{
  global $SAMSConf;
  $DB=new SAMSDB();

  $samsusers = array();
  
  $lang="./lang/lang.$SAMSConf->LANG";
  require($lang);

  $QUERY="SELECT shablon.s_shablon_id FROM shablon WHERE s_name='$templatename'";
  $result=$DB->samsdb_query_value($QUERY);
  $row=$DB->samsdb_fetch_array();
  $templateid=$row['s_shablon_id'];

  $QUERY="DELETE FROM squiduser WHERE s_nick='$username' AND s_shablon_id='$templateid' ";
  $result=$DB->samsdb_query($QUERY);

  return(NULL);
}


  global $DATE;
  global $SAMSConf;
  global $USERConf;
  global $DEBUG;

  $HELP=0;
  if ($argc != 1)
  {
	for($i=1; $i<$argc; $i++)
	{
		if (in_array($argv[$i], array('--help', '-h', '-?')))
		{
			echo "NAME\n";
			echo "    samssyncwithad - synchronize with ActiveDirectory users\n\n";
			echo "SYNOPSIS\n";
			echo "    samssyncwithad [command]\n\n";
			echo "COMMANDS\n";
			echo "    -h, --help\n";
			echo "                Show this help screen and exit.\n";
			echo "    -d, --debug\n";
			echo "                 Produce lots of debugging information.\n";
			exit();
		}
		if (in_array($argv[$i], array('--debug', '-d')))
		{
			$DEBUG=1;
		}
	}
  }

  require('./dbclass.php');
  require('./samsclass.php');
  require('./tools.php');
//$DEBUG=1;

	$SAMSConf=new SAMSCONFIG();

	$DB=new SAMSDB();

	// Получаем список групп AD, синхронизируемых с группами SAMS
	$result=$DB->samsdb_query_value("SELECT s_value FROM auth_param WHERE s_auth='adld' AND s_param='adldgroup'");

	while($row=$DB->samsdb_fetch_array())
	{
		if($DEBUG!=0)
			echo "SAMS template: ".$row['s_value']."\n";
		// Получаем массив пользователей группы AD
		$adgusers=ReturnUsersFromADGroup($row['s_value']);
		sort($adgusers);
		$adguserscount=count($adgusers);
		if($DEBUG!=0)
		{
			echo "AD Group '".$row['s_value']."':  $adguserscount users\n";
			for($i=0; $i<$adguserscount; $i++)
			{
				echo  $i+1 .":    $adgusers[$i]\n";
			}
		}
		// Получаем массив пользователей группы SAMS
		$dbgusers=ReturnUsersFromDBGroup($row['s_value']);
		sort($dbgusers);
		$dbguserscount=count($dbgusers);
		if($DEBUG!=0)
		{
			echo "\n";
			echo "SAMS DB '".$row['s_value']."': $dbguserscount users\n";
			for($i=0; $i<$dbguserscount; $i++)
			{
				echo $i+1 .":    $dbgusers[$i]\n";
			}
		}
		// получаем список пользователей, которые есть в группе AD,
		// но отсутствуют в группе SAMS
		$unknownuserinadgroup=array_diff ( $adgusers, $dbgusers );
		// получаем список пользователей, которые есть в группе SAMS,
		// но отсутствуют в группе AD
		$unknownuserinsamsgroup=array_diff ( $dbgusers, $adgusers );
		rsort($unknownuserinadgroup);
		rsort($unknownuserinsamsgroup);

		if($DEBUG!=0)
		{
			echo "\n";
			echo "unknown users from AD group '".$row['s_value']."': ".count($unknownuserinadgroup)."\n";
			for($i=0; $i<count($unknownuserinadgroup); $i++)
			{
				echo  $i+1 .":    $unknownuserinadgroup[$i]\n";
			}
			echo "    users from SAMS group '".$row['s_value']."': ".count($unknownuserinsamsgroup)."\n";
			for($i=0; $i<count($unknownuserinsamsgroup); $i++)
			{
				echo $i+1 .":    $unknownuserinsamsgroup[$i]\n";
			}
			echo "\n";
		}
		// если найдены новые пользователи в группе AD
		if(count($unknownuserinadgroup)>0)
		{
			for($i=0; $i<count($unknownuserinadgroup); $i++)
			{
				if($DEBUG!=0)
					echo "$i: $unknownuserinadgroup[$i]\n";
				// Ищем пользователя в группах SAMS 
				// (пользователя перевели в другую группу AD)
				//$groupname=SearchUserFromSAMSTemplate($unknownuserinadgroup[$i]);
				$groupname=SearchUserFromDBGroup($unknownuserinadgroup[$i]);
				if($groupname!=NULL)
				{
					if($DEBUG!=0)
						echo "user '$unknownuserinadgroup[$i]' found in the template '$groupname'\n";
					// Если пользователь найден в другой группе SAMS, перемещаем
					//MoveUserToSAMSTemplate($unknownuserinadgroup[$i], $row['s_value']);
					MoveUserToDBGroup($unknownuserinadgroup[$i], $row['s_value']);
				}
				else
				{
					// Если пользователь не найден в другой группе SAMS
					// добавляем пользователя
					//AddUserToSAMSTemplate($unknownuserinadgroup[$i], $row['s_value']);
					AddUserToDBGroup($unknownuserinadgroup[$i], $row['s_value']);
					if($DEBUG!=0)
						echo "  user '".$unknownuserinadgroup[$i]."' added to the template '".$row['s_value']."'\n";					
				}
			}
		}


		// если найдены пользователи в группе SAMS, отсутствующие в группе AD
		if(count($unknownuserinsamsgroup)>0)
		{
			for($i=0; $i<count($unknownuserinsamsgroup); $i++)
			{
				if($DEBUG!=0)
					echo "\n";
				// Ищем пользователя в группах AD, с которыми синхронизируются
				// пользователи SAMS
				$groupname=SearchUserFromADGroups($unknownuserinsamsgroup[$i]);

				if($groupname!=NULL)
				{
					// Если пользователь найден в другой группе, перемещаем
					//MoveUserToSAMSTemplate($unknownuserinsamsgroup[$i], $groupname);
					MoveUserToDBGroup($unknownuserinsamsgroup[$i], $groupname);
					if($DEBUG!=0)
						echo "user $unknownuserinsamsgroup[$i] found in the group $groupname. Move. \n";
				}
				else
				{
					// Если пользователь не найден, удаляем
					//DeleteUserToSAMSTemplate($unknownuserinsamsgroup[$i], $row['s_value']);
					DeleteUserToDBGroup($unknownuserinsamsgroup[$i], $row['s_value']);
					if($DEBUG!=0)
						echo "user $unknownuserinsamsgroup[$i] not found in AD. delete\n";
				}
			}
		}

	}



?>
